// 声明使用的语法, 必须放在非注释第一行
syntax = "proto3";

// 声明包名, Python中使用时可以省略不写(PS:我还要再Go中使用,所以留在这里了)
package demo;

// 消息message是用来定义数据的, 等号后面的是字段编号
// 消息定义中的每个字段都有唯一的编号,这些字段编号用于以消息二进制格式标识字段
// 类似于Python中定义一个类, 类似于Golang中定义一个结构体
message Request {
    int64 Cid = 1;
    string ReqMsg = 2;
}

message Response {
    int64 Sid = 1;
    string RespMsg = 2;
}

// 服务service是用来gRPC的方法的, 格式固定
// 类似于Python中定义一个类, 类似于Golang中定义一个接口
service GRPCDemo {
    // 简单模式
    rpc SimpleMethod (Response) returns (Response);
    // 客户端流模式（在一次调用中, 客户端可以多次向服务器传输数据, 但是服务器只能返回一次响应）
    rpc CStreamMethod (stream Request) returns (Response);
    // 服务端流模式（在一次调用中, 客户端只能一次向服务器传输数据, 但是服务器可以多次返回响应）
    rpc SStreamMethod (Request) returns (stream Response);
    // 双向流模式 (在一次调用中, 客户端和服务器都可以向对象多次收发数据)
    rpc TWFMethod (stream Request) returns (stream Response);
}

